{"version":3,"sources":["redux/users/actions.js","redux/store/initialState.js","redux/users/reducers.js","redux/posts/actions.js","redux/posts/reducers.js","redux/Chats/action.js","redux/Chats/reducers.js","redux/users/selector.js","firebase/index.js","firebase/config.js","redux/users/operations.js","pages/Home.jsx","pages/Shop.jsx","pages/Policy.jsx","pages/MyProfile.jsx","components/TextInput.jsx","pages/Login.jsx","components/Header.jsx","components/ImagePreview.jsx","redux/Chats/operations.js","components/SelectBox.jsx","components/UserProfile.jsx","redux/Chats/selector.js","components/UserProfileChat.jsx","components/UserLists.jsx","components/ChatInput.jsx","components/Chat.jsx","pages/Contactus.jsx","pages/ContactUsUid.jsx","pages/SignUp.jsx","pages/ProfileEdit.jsx","pages/Post.jsx","redux/posts/operations.js","pages/MyPosts.jsx","pages/SearchFriends.jsx","pages/Friends.jsx","news/NewsHome.jsx","service/config.js","service/news.js","news/DataItem.jsx","news/Japanese.jsx","service/news2.js","news/Korean.jsx","service/news3.js","news/Chinese.jsx","service/news4.js","news/English.jsx","service/news5.js","news/Russian.jsx","service/news6.js","news/French.jsx","news/News.jsx","news/Search.jsx","Auth.jsx","router/Router.js","App.js","redux/store/store.js","reportWebVitals.js","index.js"],"names":["LOG_IN","SIGN_UP","SIGN_OUT","EDIT_PROFILE","GET_All_USERS","GET_USER_PROFILE","ENABLE_TO_CHAT","GET_AN_USER_PROFILE","GET_FOLLOWED_USER","enableToChatAction","info","type","payload","follows","loginAction","userState","isSignedIn","uid","profileImage","profileSecondImage","profileThirdImage","profileFourthImage","profileFifthImage","username","age","languages","description","followers","isOnline","initialState","list","userInfo","followUserInfo","post","users","Number","nationality","posts","allUsers","UsersReducer","state","action","Actions","GET_POSTS","SAVE_POST","savePostAction","postData","PostsReducers","ENABLE_CHATS","GET_USERS","GET_UN_USERS","getAlUsersAction","ChatsReducers","nope","unUserInfo","usersSelector","basic","createSelector","getUserIsSigned","getUserInfo","getUserInfoUID","anUserInformation","getUserUID","userInformation","getAllUsers","userData","getUserSignedIn","getUserImages","getUserId","getUsername","getUserAge","getUserLanguages","getUserDescription","getUserFollows","profileImages","getUserFollowers","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","FirebaseTimestamp","functions","Timestamp","getFollowedUser","settings","ignoreUndefinedProperties","dispatch","getState","a","uuid","collection","doc","get","then","datas","data","console","log","Error","getUserProfile","image","Home","selector","useSelector","useDispatch","follow","className","src","path","style","width","height","borderRadius","alt","onClick","push","update","signOut","catch","error","Shop","Policy","MyProfile","userAge","userName","userImage","userLanguages","userDescription","userStatus","TextInput","props","TextField","fullWidth","label","margin","multiline","required","rows","value","onChange","Login","useState","email","setEmail","password","setPassword","emailfield","useCallback","event","target","passwordField","alert","signInWithEmailAndPassword","res","user","snapshot","logIn","Footer","ImagePreview","enableToChat","makeStyles","FormControl","marginBottom","minWidth","eidth","userUid","u","chatsUid","chats","FieldValue","arrayUnion","length","set","merge","followedUserInfo","UserProfile","profile","setProfile","loading","setLoading","UID","useEffect","color","chatSelector","chatInfo","getNoUserStatement","setFollows","UserLists","fetchUsers","map","i","text","maxLength","substr","shortTexts","ChatInput","messages","setMessages","exist","setExist","sendMessage","e","preventDefault","onSubmit","Input","Button","Chat","reportUser","fontSize","Contactus","reason","setReason","setUserUid","reasonField","userUidField","defaultValue","setTimeout","Uid","SignUp","setImage","setUsername","setAge","setLanguages","setDescription","imagefield","file","files","blob","Blob","String","fileName","Array","from","crypto","getRandomValues","Uint32Array","n","join","uploadTask","ref","child","put","getDownloadURL","downloadURL","newImage","id","prevState","usernamefield","window","confirm","filter","delete","agefield","languagesfield","descriptionfield","createUserWithEmailAndPassword","signUp","ProfileEdit","getusername","getuserlanguage","getuserdescription","editUserData","editProfile","Post","desciprionfield","flex","postArray","timeStamp","now","updated_at","created_at","savePost","MyPosts","userId","photos","setPhotos","undefined","photo","moment","format","background","display","justifyContent","alignItems","SearchFriends","setUsers","getUserNumber","limit","all","forEach","index","Friends","setFollowed","setChat","infomation","noUsers","chat","NewsHome","articles_url","_api_key","fetch","headers","articles","json","result","DataItem","clicked","goToNews","url","urlToImage","objectFit","title","shortText","href","Japanese","setIsLoading","setData","setClicked","getArticles","Korean","Chinese","English","Russian","French","News","Search","search","setSearch","searchField","placeholder","Auth","children","signedIn","onAuthStateChanged","Router","exact","component","Header","UserProfileChat","ContactusUid","Japanse","NewsTheme","App","history","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","History","store","reduxCreateStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bc400aa.chunk.js","sourcesContent":["export const LOG_IN = 'LOG_IN'\nexport const SIGN_UP = 'SIGN_UP'\nexport const SIGN_OUT = 'SIGN_OUT'\nexport const EDIT_PROFILE = 'EDIT_PROFILE'\nexport const GET_All_USERS = 'GET_All_USERS'\nexport const GET_USER_PROFILE = 'GET_USER_PROFILE'\nexport const ENABLE_TO_CHAT = 'ENABLE_TO_CHAT'\nexport const GET_AN_USER_PROFILE = 'GET_AN_USER_PROFILE'\nexport const GET_FOLLOWED_USER = 'GET_FOLLOWED_USER'\n\n\nexport const getFollowedUserAction = (followers) =>{\n    return{\n        type: 'GET_FOLLOWED_USER',\n        payload:{\n            followers: followers\n        }\n    }\n}\n\nexport const enableToChatAction = (info) =>{\n    return{\n        type: 'ENABLE_TO_CHAT',\n        payload: {\n            follows: info\n        }\n    }\n}\nexport const getUserProfileAction = (userInformation) =>{\n    return{\n        type: 'GET_USER_PROFILE',\n        payload: {\n           userInformation: userInformation\n        }\n    }\n}\n\nexport const getAnUserProfileAction = (anUserInformation) =>{\n    return{\n        type: 'GET_AN_USER_PROFILE',\n        payload: {\n           anUserInformation: anUserInformation\n        }\n    }\n}\nexport const searchUserAction = (userData) =>{\n    return{\n        type: 'GET_All_USERS',\n        payload: {\n           userData: userData\n        }\n    }\n}\n\nexport const profileEditAction = (userData) =>{\n    return{\n        type: 'EDIT_PROFILE',\n        payload: {\n            uid: userData.uid,\n            username: userData.username,\n            languages: userData.languages,\n            description: userData.description\n        }\n    }\n}\n\nexport const loginAction = (userState) =>{\n    return{\n        type: 'LOG_IN',\n        payload:{\n            isSignedIn: true,\n            uid: userState.uid,\n            profileImage: userState.profileImage,\n            profileSecondImage: userState.profileSecondImage,\n            profileThirdImage: userState.profileThirdImage,\n            profileFourthImage: userState.profileFourthImage,\n            profileFifthImage: userState.profileFifthImage,\n            username: userState.username,\n            age: userState.age,\n            languages: userState.languages,\n            description: userState.description,\n            //posts: []\n            follows: [],\n            followers: [],\n            isOnline: userState.isOnline\n        }\n    }\n}\n\n\nexport const signinAction = (userState) =>{\n    return{\n        type: 'SIGN_UP',\n        payload:{\n            isSignedIn: true,\n            uid: userState.uid,\n            profileImage: userState.profileImage,\n            profileSecondImage: userState.profileSecondImage,\n            profileThirdImage: userState.profileThirdImage,\n            profileFourthImage: userState.profileFourthImage,\n            profileFifthImage: userState.profileFifthImage,\n            username: userState.username,\n            age: userState.age,\n            languages: userState.languages,\n            description: userState.description,\n            //posts: [],\n            follows: [],\n            followers: [],\n            isOnline: userState.isOnline\n        }\n    }\n}\n\n\nexport const signOutAction = () =>{\n    // ユーザー情報を全て空の状態にする。(initialStateの状態)\n    return{\n        type: 'SIGN_OUT',\n        payload:{\n            isSignedIn: false,\n            profileImage: '',\n            profileSecondImage: '',\n            profileThirdImage: '',\n            profileFourthImage: '',\n            profileFifthImage: '',\n            uid: '',\n            username: '',\n            age: '',\n            languages: '',\n            description: '',\n            posts: [],\n            follows: [],\n            followers: [],\n            isOnline: false\n        }\n    }\n}","\n// このアプリ内で必要なデータの初期値をまとめたObject\nconst initialState = {\n    list: {\n        userInfo: {\n            followUserInfo:[]\n        }\n    }\n    ,\n    post: [],\n    users:{\n        isSignedIn: false,\n        uid: '',\n        username: '',\n        age: Number,\n        languages: [],\n        nationality: '',\n        description: '',\n        profileImage: '',\n        profileSecondImage: '',\n        profileThirdImage: '',\n        profileFourthImage: '',\n        profileFifthImage: '',\n        follows: [],\n        followers: [],\n        posts: [],\n        allUsers: [],\n        userInfo: []\n    }\n}\n\nexport default initialState","import * as Actions from './actions'\nimport initialState from '../store/initialState'\n\n\nexport const UsersReducer = (state = initialState, action) =>{\n    switch(action.type){\n        case Actions.GET_FOLLOWED_USER:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.ENABLE_TO_CHAT:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.GET_AN_USER_PROFILE:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.GET_USER_PROFILE:\n            return{\n                ...state,\n                list: [...action.payload]\n            }\n        case Actions.GET_All_USERS:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.EDIT_PROFILE:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.LOG_IN:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.SIGN_UP:\n            return{\n                ...state,\n                ...action.payload\n            }\n        case Actions.SIGN_OUT:\n            return{\n                // initialStateの状態に戻す。\n                ...action.payload\n            }\n        default:\n            return state\n    }\n}","export const GET_POSTS = 'GET_POSTS'\nexport const SAVE_POST = 'SAVE_POST'\n\n\n\nexport const getPostsAction = (postsData) =>{\n    return{\n        type: 'GET_POSTS',\n        payload:{\n            image: postsData.image,\n            description: postsData.description,\n            created_at: postsData.created_at\n        }\n    }\n}\n\nexport const savePostAction = (postData) =>{\n    return{\n        type: 'SAVE_POST',\n        payload:{\n            postData: postData\n            //image: postData.image,\n            //description: postData.description\n        }\n    }\n}","import initialState from \"../store/initialState\";\nimport * as Actions from './actions'\n\n\nexport const PostsReducers = (state = initialState, action) =>{\n    switch(action.type){\n        case Actions.GET_POSTS:\n            return{\n                ...state,\n                list: [...action.payload]\n            }\n        case Actions.SAVE_POST:\n            return{\n                post:[state, action.payload]\n            }\n        default:\n            return state\n    }\n}","export const ENABLE_CHATS = 'ENABLE_CHATS'\nexport const GET_USERS = 'GET_USERS'\nexport const GET_UN_USERS = 'GET_UN_USERS'\n\n\nexport const enableToChatAction = (chatInfo) =>{\n    return{\n        type: 'ENABLE_CHATS',\n        payload: {\n            chatInfo: chatInfo\n        }\n    }\n}\n\nexport const getAlUsersAction = (userInfo) =>{\n    return{\n        type: 'GET_USERS',\n        payload: {\n            userInfo: userInfo\n        }\n    }\n}\n\nexport const getUnUser = () =>{\n    return{\n        type: 'GET_UN_USERS',\n        payload:{\n            unUserInfo: 'No USERS'\n        }\n    }\n}","import * as Actions from './action'\nimport initialState from '../store/initialState'\n\n\nexport const ChatsReducers = (state = initialState, action) =>{\n    switch (action.type){\n        case Actions.GET_UN_USERS:\n            return{\n                ...state,\n                nope: [...action.payload.unUserInfo]\n            }\n        case Actions.GET_USERS:\n            return{\n                state,\n                list: action.payload\n            }\n        case Actions.ENABLE_CHATS:\n            return{\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state\n    }\n}","import { createSelector } from 'reselect'\n\nconst usersSelector = (state) => state.users\n\nexport const basic = createSelector(\n    [usersSelector],\n    state => state\n)\n\nexport const getUserIsSigned =createSelector(\n    [usersSelector],\n    state => state.isSignedIn\n)\n\nexport const getUserInfo = createSelector(\n    [usersSelector],\n    state => state.list.userInfo.followUserInfo\n)\n\nexport const getUserInfoUID = createSelector(\n    [usersSelector],\n    state => state.anUserInformation.uid\n)\n\nexport const getUser = createSelector(\n    [usersSelector],\n    state => state.userInformation\n)\n\nexport const getUserUID = createSelector(\n    [usersSelector],\n    state => state.anUserInformation\n)\nexport const getAllUsers = createSelector(\n    [usersSelector],\n    state => state.userData\n)\n\nexport const getUserSignedIn = createSelector(\n    [usersSelector],\n    state => state.isSignedIn\n)\n\nexport const getUserImages = createSelector(\n    [usersSelector],\n    state => state.profileImage\n)\nexport const getUserId = createSelector(\n    [usersSelector],\n    state => state.uid\n)\n\nexport const getUsername = createSelector(\n    [usersSelector],\n    state => state.username\n)\n\nexport const getUserAge = createSelector(\n    [usersSelector],\n    state => state.age\n)\n\nexport const getUserLanguages = createSelector(\n    [usersSelector],\n    state => state.languages\n)\n\nexport const getUserDescription = createSelector(\n    [usersSelector],\n    state => state.description\n)\n\nexport const getUserNationality = createSelector(\n    [usersSelector],\n    state => state.nationality\n\n)\n\nexport const getUserProfileimages = createSelector(\n    [usersSelector],\n    state => state.profileImages\n)\n\nexport const getUserFollows = createSelector(\n    [usersSelector],\n    state => state.follows\n\n)\n\nexport const getUserFollowers = createSelector(\n    [usersSelector],\n    state => state.followers\n)","import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport 'firebase/functions'\nimport { firebaseConfig } from './config'\n\n\n// 使う機能のみをexportする。\nfirebase.initializeApp(firebaseConfig)\nexport const auth = firebase.auth()\nexport const db = firebase.firestore()\nexport const storage = firebase.storage()\nexport const functions = firebase.functions()\nexport const FirebaseTimestamp = firebase.firestore.Timestamp\n\nexport const settings = firebase.firestore().settings({\n    ignoreUndefinedProperties: true,\n})\n","//このアプリのキー\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyBmuje61-bKUOictjyXin-or7lpqAqisQ0\",\n    authDomain: \"reduxchat-9e01c.firebaseapp.com\",\n    projectId: \"reduxchat-9e01c\",\n    storageBucket: \"reduxchat-9e01c.appspot.com\",\n    messagingSenderId: \"133532860370\",\n    appId: \"1:133532860370:web:ef9ce988660158ec10920b\",\n    measurementId: \"G-78CC2CKKWE\"\n};\n","import {  searchUserAction, profileEditAction, loginAction,\n          signinAction, signOutAction, getUserProfileAction, getAnUserProfileAction,\n          getFollowedUserAction } from './actions'\nimport { push } from 'connected-react-router'\nimport { auth, db } from '../../firebase/index'\n\n\n// Operations => 複雑な操作を記載できる。\n\nexport const getFollowedUser = (uid) =>{\n    return async(dispatch, getState) =>{\n        try{\n            const uuid = getState().users.uid\n            db.collection('users')\n              .doc(uuid)\n              .get()\n              .then(datas =>{\n                  const data = datas.data()\n                  console.log(data)\n                  dispatch(getFollowedUserAction(data))\n              })\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\nexport const getUserProfile = (uid,username,description,image,age,isOnline,languages) =>{\n    return async(dispatch,getState) =>{\n        try{\n            const userId = getState().users.uid\n            const userData = {\n                uid: uid,\n                username: username,\n                description: description,\n                image: image,\n                age: age,\n                isOnline: isOnline,\n                languages: languages\n            }\n\n            /* await db.collection('chatUsers')\n              .doc(userId)\n              .collection('conversations')\n              .doc(userData.uid)\n              .set({\n                  conversations: []\n              },{ merge: true})*/\n            if(uid){\n                dispatch(getAnUserProfileAction(userData))\n            }\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\nexport const getOtherFriends = (getUserNumber) =>{\n    return async(dispatch, getState) =>{\n        try{\n            const users = await db.collection('users')\n                                  .limit(getUserNumber)\n                                  .get()\n                //const uid = getState().users\n\n                    let all = []\n                    users.forEach(a =>{\n                    // 全てのユーザーの情報を抽出\n                    all.push(a.data())\n                    console.log(a.data())\n                    dispatch(searchUserAction(all))\n                })\n            }\n            catch(error){\n                throw new Error(error)\n            }\n    }\n}\n\n\n\nexport const editProfile = (username, languages, description) =>{\n    return async(dispatch,getState) =>{\n        try{\n            const uid = getState().users.uid\n\n            if(username === ''){\n                alert('Fill out your name,please.')\n                return false\n            }else if(languages === ''){\n                alert('Fill out your languages,please.')\n                return false\n            }\n\n            const editUserData = {\n                uid: uid,\n                username: username,\n                languages: languages,\n                description: description\n            }\n\n            db.collection('users')\n              .doc(uid)\n              .set(editUserData,{merge: true})\n              .then(() =>{\n                dispatch(profileEditAction(editUserData))\n              })\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\n\nexport const authState = () =>{\n    return async(dispatch) =>{\n        try{\n            // ユーザーがlogin又はlogoutのどちらかの状態にあるかの確認\n            return auth.onAuthStateChanged(user =>{\n                if(user){\n                    const uid = user.uid\n                    // userが確認されれば、そのuserのuidを定数で定義しfirebaseからそのuserの情報を取得する。\n                        db.collection('users')\n                          .doc(uid)\n                          .get()\n                          .then(snapshot =>{\n                              const data = snapshot.data()\n                              // loginActionというaction内に引数を渡す。\n                              dispatch(loginAction(\n                              data))\n\n                              dispatch(push('/'))\n                        })\n                }else{\n                    // loginしていなければloginページに移動される。\n                    dispatch(push('/login'))\n                }\n            })\n        }\n        catch(error){\n            console.log(`ERROR: ${error}!`)\n        }\n    }\n}\n\nexport const logIn = (email,password) =>{\n    return async(dispatch) =>{\n        try{\n            if(email === '' || password === ''){\n                alert('Fill out all Fields!')\n                return false\n            }\n\n            auth.signInWithEmailAndPassword(email,password)\n                .then(res =>{\n                    const user = res.user\n\n                    if(user){\n                        const uid = user.uid\n\n                        db.collection('users')\n                          .doc(uid)\n                          .get()\n                          .then(snapshot =>{\n                              const data = snapshot.data()\n\n                              dispatch(loginAction({\n                                isSignedIn: true,\n                                uid: uid,\n                                username: data.username,\n                                age: data.age,\n                                languages: data.languages,\n                                description: data.description,\n                                profileImage: data.profileImage,\n                                profileSecondImage: data.profileSecondImage,\n                                profileThirdImage: data.profileThirdImage,\n                                profileFourthImage: data.profileThirdImage,\n                                profileFifthImage: data.profileFifthImage,\n                                follows: [],\n                                followers: [],\n                                isOnline: true\n                              }))\n\n                              dispatch(push('/'))\n                          })\n                    }\n                })\n        }\n        catch(error){\n            console.log(`ERROR: ${error}!`)\n        }\n    }\n}\n\nexport const signUp = (profileImage,username,age,languages,description,email,password) =>{\n    return async(dispatch) =>{\n        try{\n            //profileImage === ''\n            // どれか１つでもinput内に記入漏れがあった場合は、ユーザーに警告文が表示される。\n            if( profileImage === '' || username === '' || age === '' || languages === '' ||\n               description === '' || email === '' || password === ''){\n                   alert('Fill out all Fields!')\n                   return false\n            }\n            if(age < 18){\n                alert('You must not use this application,sorry.')\n                return false\n            }\n            return auth.createUserWithEmailAndPassword(email,password)\n                   .then(res =>{\n                       const user = res.user\n\n                       if(user){\n                           const uid = user.uid\n                           //const timestamp = FirebaseTimestamp.now()\n\n                           const userData = {\n                              // created_at: timestamp,\n                               email: email,\n                               password: password,\n                               uid: uid,\n                               profileImage: profileImage,\n                               profileSecondImage: '',\n                               profileThirdImage: '',\n                               profileFourthImage: '',\n                               profileFifthImage: '',\n                               username: username,\n                               age: age,\n                               languages: languages,\n                               description: description,\n                               posts: [],\n                               follows: [],\n                               followers: [],\n                               isOnline: true\n                           }\n                           db.collection('users')\n                             .doc(uid)\n                             .set(userData)\n                             .then(() =>{\n                                 dispatch(signinAction(userData))\n                                 dispatch(push('/'))\n                             })\n                       }\n                   })\n\n        }\n        catch(error){\n            console.log(`ERROR: ${error}!`)\n        }\n    }\n}\n\nexport const signOut = () =>{\n    return async(dispatch, getState) =>{\n        try{\n\n            const uid = getState().users.uid\n\n            db.collection('users')\n              .doc(uid)\n              .update({\n                  isOnline: false\n              })\n              .then(() =>{\n                auth.signOut()\n                .then(() =>{\n                    // signOutActionを行い、loginページに移動される。\n                    dispatch(signOutAction())\n                    dispatch(push('/login'))\n                })\n              })\n              .catch(error =>{\n                console.log(error)\n              })\n        }\n        catch(error){\n            console.log(`ERROR: ${error}!`)\n        }\n    }\n}","import React, { useState } from 'react'\nimport '../css/home.css'\nimport { useDispatch ,useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { basic, getUsername, getUserImages, getUserId, getUserIsSigned } from '../redux/users/selector'\nimport { signOut } from '../redux/users/operations'\nimport { BsFillEnvelopeFill, BsFillGearFill, BsBag,\n         BsBoxArrowInRight, BsCircleHalf, BsDashCircle,\n         BsJustify } from \"react-icons/bs\";\n\n\nconst Home = () => {\n    const selector = useSelector(state => state)\n    const dispatch = useDispatch()\n    const username = getUsername(selector)\n    const userStatus = getUserIsSigned(selector)\n    const uid = getUserId(selector)\n    const image = getUserImages(selector)\n    const follow = basic(selector)\n    console.log(follow)\n\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"informationContainer\">\n              <div className=\"pictureContainer\">\n                  <div className=\"profilePicture\">\n                     <img src={image[0].path} style={{width: 250, height: 250, borderRadius:'50%'}} alt=\"Profile\" />\n                  </div>\n              </div>\n              <div className=\"username\">\n                        <p>{username}<span>   🇯🇵</span></p>\n                        {/*<small>{uid}</small>*/}\n                        {/* <p>{ userStatus ? 'Online' : 'Offline'}</p> */}\n              </div>\n            </div>\n            <div className=\"homeItems\">\n                <div\n                    onClick={() => dispatch(push('/profile'))}\n                    className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsFillGearFill className=\"homeIcon\" />\n                    </div>\n                    <p className=\"homeItemName\">Edit Profile</p>\n                </div>\n                <div\n                    onClick={() => dispatch(push('/shop'))}\n                    className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsBag className=\"homeIcon\" />\n                    </div>\n                    <p className=\"homeItemName\">Shop</p>\n                </div>\n                <div\n                  onClick={() => dispatch(signOut())}\n                  className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsBoxArrowInRight className=\"homeIcon\" />\n                    </div>\n                    <p className=\"homeItemName\">Log Out</p>\n                </div>\n                <div\n                    onClick={() => dispatch(push('/home/contactus'))}\n                    className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsFillEnvelopeFill className=\"homeIcon\"/>\n                    </div>\n                    {/* 問い合わせフォームを作る。*/}\n                    <p className=\"homeItemName\">Contact us</p>\n                </div>\n                <div\n                    onClick={() => dispatch(push('/policy'))}\n                    className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsJustify className=\"homeIcon\"/>\n                    </div>\n                    <p className=\"homeItemName\">Policy</p>\n                </div>\n                <div className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsDashCircle className=\"homeIcon\"/>\n                    </div>\n                    <p className=\"homeItemName\">Notification Off</p>\n                </div>\n                <div className=\"homeItem\">\n                    <div className=\"homeIconBack\">\n                      <BsCircleHalf className=\"homeIcon\" />\n                    </div>\n                    <p className=\"homeItemName\">Dark Mode</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\nimport '../css/Shop.css'\n\nconst Shop = () => {\n    return (\n        <div className=\"shop\">\n            We are going to keep you updated once new service is launched!\n        </div>\n    )\n}\n\nexport default Shop\n","import React from 'react'\nimport '../css/Policy.css'\n\nconst Policy = () => {\n    return (\n        <div className=\"policyContainer\">\n            <div className=\"policyStyles\">\n                <header>\n                    Our Policy\n                </header>\n                <ol>\n                    <li>We NEVER intend to distribute your all information with other services.</li>\n                    <li>We DO NOT allow Users who is under 18 years old to use this Application due to some inappropriate potential problems\n                        and protect them.</li>\n                    <li>We may ask you to track your location to display distances between users.</li>\n                    <li>If some users violates our rules, we immediately deal with them and block these users.</li>\n                    <li>Report users with id if you find inappropriate users and click an icon on Chat page. </li>\n                </ol>\n            </div>\n        </div>\n    )\n}\n\nexport default Policy\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { AiOutlineHdd, AiOutlinePlusSquare, AiOutlineSolution } from \"react-icons/ai\";\nimport { getUserAge, getUsername, getUserImages, getUserLanguages, getUserDescription, getUserIsSigned } from '../redux/users/selector';\nimport '../css/MyProfile.css'\n\nconst MyProfile = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state)\n    const userAge = getUserAge(selector)\n    const userName = getUsername(selector)\n    const userImage = getUserImages(selector)\n    const userLanguages = getUserLanguages(selector)\n    const userDescription = getUserDescription(selector)\n    const userStatus = getUserIsSigned(selector)\n\n    return (\n        <div className=\"myProfileContainers\">\n            <div className=\"editIcon\">\n                    <ul>\n                        <li onClick={() => dispatch(push('/profile/edit'))}>\n                            Update Your Profile<AiOutlineSolution />\n                        </li>\n                        <li onClick={() => dispatch(push('/profile/posts'))}>\n                            My Posts<AiOutlineHdd />\n                        </li>\n                        <li onClick={() => dispatch(push('/profile/edit/post'))}>\n                            Go To Posts<AiOutlinePlusSquare />\n                        </li>\n                    </ul>\n            </div>\n            <div className=\"myProfileContainer\">\n                <div className=\"myProfileImage\">\n                    <img src={userImage[0].path} alt=\"Profile\" />\n                </div>\n                <div className=\"myProfileInformation\">\n                   {/* <div>\n                      <p style={{fontWeight:'bold', borderBottom:'5px solid #ccc',fontSize:'20px'}}>*Information</p>\n                   </div>*/}\n                    <div className=\"myProfileInfoContainer\">\n                      <p className=\"myProfileUsername\">{userName} / </p>\n                      <p className=\"myProfileAge\">{userAge}yld / </p>\n                      <p className=\"myProfileOnlineStatus\">{ userStatus === true ?'Online' :'Offline'}/ </p>\n                      <span className=\"myProfileNationallity\"> 🇯🇵</span>\n                    </div>\n                </div>\n                <div className=\"myProfileLanguages\">\n                    {/*今は、言語が１つしかSignUp Componentで入力出来ないから<li>で代用しているが、languagesをarrayにして保存して、map関数で回す。 */}\n                    <p>*Languages</p>\n                    <li>{userLanguages}</li>\n                </div>\n                <div className=\"myProfileDescription\">\n                    <p className=\"myProfileDescriptionTitle\">*Description</p>\n                    <p className=\"myProfileUserdescription\">{userDescription}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyProfile\n","import React from 'react'\nimport { TextField } from '@material-ui/core'\n\n\nconst TextInput = (props) =>{\n    return(\n        <TextField\n         fullWidth={props.fullWidth}\n         label={props.label}\n         margin=\"dense\"\n         multiline={props.multiline}\n         required={props.required}\n         rows={props.rows}\n         value={props.value}\n         type={props.type}\n         onChange={props.onChange}\n        />\n    )\n}\nexport default TextInput","import React, { useState, useCallback } from 'react'\nimport '../css/Login.css'\nimport { useDispatch } from 'react-redux'\nimport TextInput from '../components/TextInput'\nimport { logIn } from '../redux/users/operations'\nimport { push } from 'connected-react-router'\n\n\n\nconst Login = () => {\n\n    const dispatch = useDispatch()\n    const [email, setEmail] = useState(''),\n          [password, setPassword] = useState('')\n\n    const emailfield = useCallback((event) =>{\n        setEmail(event.target.value)\n    },[setEmail])\n\n    const passwordField = useCallback((event) =>{\n        setPassword(event.target.value)\n    },[setPassword])\n\n    return (\n        <div className=\"loginContainer\">\n            <header>\n                 <p>Language Exchange App</p>\n            </header>\n            <div className=\"subtitle\">\n                <p>Read News,Find and Talk with Friends!</p>\n            </div>\n            <div className=\"loginSecondContainer\">\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={false} label={'Email'} required={true}\n                    rows={1} value={email} type={'email'} onChange={emailfield}\n                    />\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={false} label={'Password'} required={true}\n                    rows={1} value={password} type={'password'} onChange={passwordField}\n                    />\n                </div>\n                <div\n                className=\"loginButton\"\n                onClick={() => dispatch(logIn(email,password))}>\n                    Log In\n                </div>\n                <div className=\"loginButtonContainer\">\n                    <div className=\"loginFacebookButton\">\n                        <div>\n                            <p>Log In with Facebook Account</p>\n                        </div>\n                    </div>\n                    <div className=\"loginGoogleButton\">\n                        <div>\n                        <p>Log In with Google Account</p>\n                        </div>\n                    </div>\n                </div>\n               {/* <div className=\"loginPolicy\">\n                   <p className=\"loginPolicyText\">You can confirm that your acccept our</p>\n                   <p className=\"loginPolicyTerms\">Terms of service and policy</p>\n                </div>*/}\n                <div\n                className=\"loginSignupButton\"\n                onClick={() => dispatch(push('/signup'))}>\n                    You don't have your account yet?<br/>\n                    Sign Up to<span className=\"click\"> click here</span>!\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport '../css/header.css'\nimport { BiCommentDetail } from \"react-icons/bi\";\nimport { BsFillPersonFill } from \"react-icons/bs\";\nimport { AiTwotoneMail, AiOutlineZoomIn} from \"react-icons/ai\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getUserImages } from '../redux/users/selector';\n\n\nconst Footer = () => {\n   const dispatch = useDispatch()\n   const selector = useSelector(state => state)\n   const userImage = getUserImages(selector)\n\n    return (\n        <div className=\"footer\">\n               <div className=\"footerTitle\">\n                 <div className=\"footerContent\">\n                    <img src={userImage[0].path} alt=\"ProfileImage\" style={{width:40, height: 40, borderRadius:'50%'}} />\n                 </div>\n              </div>\n             <div className=\"footerTitle\">\n                 <div className=\"footerContent\">\n                    <BiCommentDetail\n                    className=\"footerIcon\"\n                    onClick={() => dispatch(push('/news'))}/>\n                 </div>\n              </div>\n              <div className=\"footerTitle\">\n                 <div className=\"footerContent\">\n                    <AiOutlineZoomIn\n                      className=\"footerIcon\"\n                      onClick={() => dispatch(push('/search'))} />\n                 </div>\n              </div>\n              <div className=\"footerTitle\">\n                 <div className=\"footerContent\">\n                    <AiTwotoneMail\n                    className=\"footerIcon\"\n                    onClick={() => dispatch(push('/friendsCandidate'))} />\n                 </div>\n              </div>\n              <div className=\"footerTitle\">\n                 <div\n                 className=\"footerContent\">\n                    <BsFillPersonFill\n                    className=\"footerIcon\"\n                    onClick={() => dispatch(push('/'))}/>\n                 </div>\n              </div>\n            </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst ImagePreview = (props) => {\n    return (\n        <div className=\"imagePreviewProfileImage\" //onClick={() => props.delete(props.id)}\n        >\n            <img\n                style={{height: 300, width: 300}}\n                alt=\"profileImage\"\n                src={props.path}\n            />\n        </div>\n    )\n}\n\nexport default ImagePreview\n","import { getAlUsersAction, getUnUser } from './action'\nimport { enableToChatAction } from '../users/actions'\nimport { db } from '../../firebase/index'\nimport firebase from 'firebase/app'\nimport { getFollowedUser } from '../users/operations'\n\n\n// databaseにfollow, followedを追加して役割を分担させる必要あり?\n\n\n/*export const startConveration = (uid) =>{\n    return async(dispatch, getState) =>{\n        try{\n            const userUid = getState().users.uid\n\n\n            await db.collection('chatUsers')\n                    .doc(userUid)\n                    .collection('conversations')\n                    .doc(uid)\n                    .set({\n                        conversations: firebase.firestore.FieldValue.arrayUnion\n                    })\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}*/\n\nexport const deleteUser = (userUid) =>{\n    return async(dispatch,getState) =>{\n        try{\n            const uid = getState().users.uid\n            const list = getState().anUserInformation.uid\n\n            db.collection('users')\n              .doc(uid)\n              .update({\n                  follows: firebase.firestore.FieldValue.arrayRemove(userUid)\n              })\n\n              dispatch(getAlUsersAction())\n\n            /*if(userUid === list){\n                db.collection('chatUsers')\n                  .doc(uid)\n                  .update({\n\n                })\n            }*/\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\nexport const followUser = (uid) =>{\n    return async(dispatch,getState) =>{\n        try{\n            const userInformation = getState().users.anUserInformation\n            dispatch(enableToChatAction(userInformation))\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\nexport const getAllUsers = () =>{\n    return async(dispatch, getState) =>{\n        const uid = getState().users.uid\n        const chat = getState().chats\n        console.log(chat)\n\n        try{\n            db.collection('chatUsers')\n              .doc(uid)\n              .get()\n              .then(snapshot =>{\n                  const data = snapshot.data()\n                  if(data){\n                    dispatch(getAlUsersAction(data))\n                  }else{\n                      dispatch(getUnUser())\n                  }\n                  console.log(data)\n              })\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\nexport const enableToChat = (userUid) =>{\n    const u = userUid\n    return async(dispatch, getState) =>{\n        try{\n            //const uid = getState().users.uid\n            const { uid, username, profileImage } = getState().users\n            const userData = {\n                uid: uid,\n                username: username,\n                profileImage: profileImage\n            }\n            const userInformation = getState().users.anUserInformation\n            //const chatsUid = getState().chats.list\n            const chatsUid = getState().chats.list.userInfo.followUserInfo\n            console.log(userInformation)\n\n\n                 if(userInformation){\n                        db.collection('users')\n                        .doc(uid)\n                        .update({\n                           follows: firebase.firestore.FieldValue.arrayUnion(userInformation.uid)\n                        })\n                        db.collection('users')\n                          .doc(u)\n                          .update({\n                              followers: firebase.firestore.FieldValue.arrayUnion(uid)\n                          })\n                          .then(() =>{\n                              dispatch(getFollowedUser(userData))\n                          })\n                          .catch(error =>{\n                              console.log(error)\n                          })\n\n                        if(chatsUid.length === 0){\n                            console.log('OK')\n                            db.collection('chatUsers')\n                              .doc(uid)\n                              .set({\n                                  followUserInfo: firebase.firestore.FieldValue.arrayUnion(userInformation)\n                              })\n\n                            /*db.collection('chatUsers')\n                              .doc(u)\n                              .set({\n                                  followedUserInfo: firebase.firestore.FieldValue.arrayUnion(userData)\n                              })*/\n                        }else{\n                            console.log('NO')\n                            db.collection('chatUsers')\n                              .doc(uid)\n                              .update({\n                                  followUserInfo: firebase.firestore.FieldValue.arrayUnion(userInformation)\n                              },{merge: true})\n\n                            db.collection('chatUsers')\n                              .doc(u)\n                              .update({\n                                  followedUserInfo: firebase.firestore.FieldValue.arrayUnion(userData)\n                              },{merge: true})\n                        }\n                        dispatch(enableToChatAction(userInformation));\n                    }else{\n                        alert('ERROR')\n                    }\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n","import React from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n    FormControl:{\n        marginBottom:16,\n        minWidth:128,\n        eidth: '100%'\n    }\n})\n\nconst SelectBox = (props) => {\n    const classes = useStyles()\n    return (\n       <FormControl className={classes.FormControl}>\n           <InputLabel>{props.label}</InputLabel>\n           <Select\n             required={props.required}\n             value={props.value}\n             onChange={(e) => props.select(e.target.value)}\n           />\n           {\n            props.options.length > 0 && (\n                props.options.map(option =>(\n                    <MenuItem value={option.id} key={option.id}>{option.name}</MenuItem>\n                ))\n             )\n            }\n       </FormControl>\n    )\n}\n\nexport default SelectBox\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getUserUID, getUserInfo } from '../redux/users/selector'\nimport { enableToChat } from '../redux/Chats/operations'\nimport '../css/UserProfile.css'\n\n\nconst UserProfile = () => {\n\n    const selector = useSelector(state => state)\n    const dispatch = useDispatch()\n    const [profile, setProfile] = useState([]),\n          [loading, setLoading] = useState(false)\n\n    console.log(profile)\n    const UID = getUserUID(selector)\n    const userInfo = getUserInfo(selector)\n\n    useEffect(() =>{\n        setProfile(UID)\n        setLoading(true)\n    },[UID])\n\n    const goToChat = () =>{\n        dispatch(push(`/friends/chat/${profile.uid}`))\n        dispatch(enableToChat(profile.uid))\n    }\n\n    return (\n        <>\n        <div className=\"userProfileTheme\">\n              User Profile\n        </div>\n        <div className=\"userProfileContainer\">\n                <div className=\"myProfileImage\">\n                    { loading === false ?\n                       <div style={{color:'blue'}}>\n                           Loading....\n                       </div>: <img src={profile.image[0].path} alt=\"Profile\" />}\n                    <div className=\"goChat\" onClick={() => goToChat()}>Go Chat with {profile.username}</div>\n                </div>\n                <div className=\"myProfileInformation\">\n                   {/* <div>\n                      <p style={{fontWeight:'bold', borderBottom:'5px solid #ccc',fontSize:'20px'}}>*Information</p>\n                   </div>*/}\n                    <div className=\"myProfileInfoContainer\">\n                      <p className=\"myProfileUsername\">{profile.username} / </p>\n                      <p className=\"myProfileAge\">{profile.age}years old / </p>\n                      <p className=\"myProfileOnlineStatus\">{ profile.isOnline === true ?'Online' :'Offline'} / </p>\n                      <span className=\"myProfileNationallity\"> 🇯🇵</span>\n                    </div>\n                </div>\n                <div className=\"myProfileLanguages\">\n                    {/*今は、言語が１つしかSignUp Componentで入力出来ないから<li>で代用しているが、languagesをarrayにして保存して、map関数で回す。 */}\n                    <p>*Languages</p>\n                    <li>{profile.languages}</li>\n                </div>\n                <div className=\"myProfileDescription\">\n                    <p className=\"myProfileDescriptionTitle\">*Description</p>\n                    <p className=\"myProfileUserdescription\">{profile.description}</p>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default UserProfile\n","import { createSelector } from 'reselect'\n\nconst chatSelector = (state) => state.chats\n\nexport const getUserChats = createSelector(\n    [chatSelector],\n    state => state.chatInfo\n)\n\nexport const getUnUserInfo = createSelector(\n    [chatSelector],\n    state => state.unUserInfo\n)\n\nexport const getUserInfo = createSelector(\n    [chatSelector],\n    state => state.list.userInfo.followUserInfo\n)\n\nexport const getNoUserStatement = createSelector(\n    [chatSelector],\n    state => state.nope\n)","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getUserUID, getUserFollows } from '../redux/users/selector'\nimport { getUserInfo } from '../redux/Chats/selector'\nimport { enableToChat } from '../redux/Chats/operations'\nimport '../css/UserProfile.css'\n\n\nconst UserProfile = () => {\n\n    const selector = useSelector(state => state)\n    const dispatch = useDispatch()\n    const [profile, setProfile] = useState([]),\n          [follows, setFollows] = useState([]),\n          [loading, setLoading] = useState(false)\n\n    console.log(profile)\n    const UID = getUserUID(selector)\n    const userInfo = getUserFollows(selector)\n    console.log(profile.image)\n\n    useEffect(() =>{\n        setProfile(UID)\n        setFollows(userInfo)\n        setLoading(true)\n    },[UID])\n\n    const goToChat = () =>{\n        dispatch(push(`/friends/chat/${profile.uid}`))\n        dispatch(enableToChat(profile.uid))\n    }\n\n    return (\n        <>\n        <div className=\"userProfileTheme\">\n              User Profile\n        </div>\n        <div className=\"userProfileContainer\">\n                <div className=\"myProfileImage\">\n                    { loading === false ?\n                        <div style={{color:'blue'}}>\n                            Loading....\n                        </div>  : <img src={profile.image[0].path} alt=\"Profile\" /> }\n                    { follows.uid === profile.uid ? null : <div className=\"goChat\" onClick={() => goToChat()}>Go Chat with {profile.username}</div>}\n                </div>\n                <div className=\"myProfileInformation\">\n                   {/* <div>\n                      <p style={{fontWeight:'bold', borderBottom:'5px solid #ccc',fontSize:'20px'}}>*Information</p>\n                   </div>*/}\n                    <div className=\"myProfileInfoContainer\">\n                      <p className=\"myProfileUsername\">{profile.username} / </p>\n                      <p className=\"myProfileAge\">{profile.age}years old / </p>\n                      <p className=\"myProfileOnlineStatus\">{ profile.isOnline === true ?'Online' :'Offline'} / </p>\n                      <span className=\"myProfileNationallity\"> 🇯🇵</span>\n                    </div>\n                </div>\n                <div className=\"myProfileLanguages\">\n                    {/*今は、言語が１つしかSignUp Componentで入力出来ないから<li>で代用しているが、languagesをarrayにして保存して、map関数で回す。 */}\n                    <p>*Languages</p>\n                    <li>{profile.languages}</li>\n                </div>\n                <div className=\"myProfileDescription\">\n                    <p className=\"myProfileDescriptionTitle\">*Description</p>\n                    <p>{profile.description}</p>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default UserProfile\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getUserProfile } from '../redux/users/operations'\nimport '../css/UserLists.css'\n\n\nconst UserLists = (props) => {\n    const { uid, username, description, image, isOnline, languages, age } = props\n\n    console.log(image)\n\n    const dispatch = useDispatch()\n    const fetchUsers = async() =>{\n        dispatch(push(`/search/${uid}`))\n        dispatch(getUserProfile(uid,username,description,image,age,isOnline,languages))\n    }\n\n    const shortTexts = (text, maxLength = 50) =>{\n        if(text === '') {return ' '}\n        if(text <= maxLength) {return text}\n        return text.substr(0,maxLength) + '...'\n    }\n\n    return(\n       <div className=\"userListsContainer\">\n          <div onClick={fetchUsers} className=\"userListsInfo\">\n              <div className=\"userListsImage\">\n                  { image ? (\n                      image.map(i =>(\n                          <img src={i.path} alt=\"profile\" />\n                      ))\n                  ): 'Helloo'}\n              </div>\n              <div className=\"userListsUserInfos\">\n                  <div className=\"userListsBasicInfo\">\n                    <p className=\"userListsBasicInfoUsername\">{username} / </p>\n                    <p className=\"userListsBasicInfoAge\">{age} years old / </p>\n                    <p className=\"userListsBasicInfoStatus\">{ isOnline === true ? ' Online' : ' Offline'}</p>\n                  </div>\n                  <ul className=\"userListUserLanguages\">\n                      <li>{languages}</li>\n                  </ul>\n                  <div className=\"userListsUserDescription\">\n                     <p>{shortTexts(description)}</p>\n                  </div>\n              </div>\n           </div>\n       </div>\n    )\n}\n\nexport default UserLists\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getUser, getUserFollows, getUserIsSigned, getUserId } from '../redux/users/selector'\nimport { Input, Button } from '@material-ui/core'\nimport { db } from '../firebase'\nimport firebase from 'firebase/app'\n\n\nconst ChatInput = (props) => {\n    const uid = props\n    const [messages, setMessages] = useState([]),\n          [exist, setExist] = useState([])\n    const selector = useSelector(state => state)\n    const userUid = getUserId(selector)\n\n\n    const sendMessage = async(e) =>{\n        e.preventDefault()\n\n        let array = []\n        console.log(exist)\n        if(exist.text){\n            await db.collection('messages')\n                .doc(userUid)\n                .update({\n                        text: firebase.firestore.FieldValue.arrayUnion(messages),\n                        uid: firebase.firestore.FieldValue.arrayUnion(uid)\n                },{merge: true})\n        }else{\n            await db.collection('messages')\n                .doc(userUid)\n                .set({\n                    text: messages,\n                    uid: uid\n                })\n        }\n\n    }\n\n    useEffect(() =>{\n        db.collection('messages')\n          .doc(userUid)\n          .get()\n          .then(doc =>{\n              const data = doc.data()\n              const text = data.text\n              //console.log(text)\n\n              if(data){\n                 setExist(data)\n              }else{\n                 setExist([])\n              }\n          })\n    },[])\n\n    return (\n        <div>\n            <form onSubmit={sendMessage}>\n                    <div className=\"chatInput\">\n                      <Input fullWidth={true} multiline={false} className=\"chatSendMessages\"\n                                value={messages} type={'text'} onChange={(e) => setMessages(e.target.value)}  />\n                      <Button type=\"submit\"\n                              style={{margin: 10}}>Send</Button>\n                    </div>\n                </form>\n        </div>\n    )\n}\n\nexport default ChatInput\n","import React, { useState, useCallback, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getUser, getUserFollows, getUserIsSigned, getUserId } from '../redux/users/selector'\nimport TextInput from './TextInput'\nimport { getUserChats } from '../redux/Chats/selector'\nimport { deleteUser } from '../redux/Chats/operations'\nimport { AiOutlineArrowLeft, AiOutlineExclamationCircle } from \"react-icons/ai\";\nimport '../css/Chat.css'\nimport ChatInput from './ChatInput'\nimport { db } from '../firebase'\nimport firebase from 'firebase/app'\n\nconst Chat = () => {\n    const [messages, setMessages] = useState([]),\n          [u, setU] = useState(''),\n          [send, setSend] = useState(false)\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state)\n    const user = getUserFollows(selector)\n    const isOnline = getUserIsSigned(selector)\n    const userUid = getUserId(selector)\n\n\n    const reportUser = (userUid) =>{\n        dispatch(push(`/contactus/${userUid}`))\n    }\n\n    useEffect(() =>{\n        db.collection('messages')\n          .doc(userUid)\n          .get()\n          .then((doc) =>{\n              const data = doc.data()\n              const text = data.text\n              setMessages(text)\n          })\n    })\n\n\n    return (\n        <>\n        <div\n            className=\"friendsChat\"\n            onClick={() => dispatch(push('/friendsCandidate'))}>\n            <AiOutlineArrowLeft />\n              Back\n        </div>\n        <div className=\"chatContainer\">\n            <div className=\"chatSecondContainer\">\n                <div className=\"chatUserInfo\">\n                    <div className=\"chatUserInfos\">\n                      <img src={user.image[0].path} style={{width:50, height:50, borderRadius:'50%'}} alt=\"Profile\" />\n                      <p onClick={() => dispatch(push(`/userProfile/${user.uid}`))}>{user.username}</p>\n                      <p>{ isOnline === true ? 'Online' : 'Offline' }</p>\n                      <AiOutlineExclamationCircle onClick={() => reportUser(user.uid)} style={{fontSize:40}} />\n                    </div>\n                </div>\n                <div className=\"chatMessages\">\n                   {/* { messages.length > 0 || send === true? (\n                            <div>\n                                <p>{messages}</p>\n                            </div>\n                      )\n                    : null}*/}\n                    <ul className={userUid !== user.uid ? 'user': 'leftUser'}>\n                        <li>{messages}</li>\n                    </ul>\n                </div>\n                {/* ADD USERNAME LATER */}\n                <ChatInput uid={user.uid} />\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Chat\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { getUsername } from '../redux/users/selector'\nimport { useSelector } from 'react-redux'\nimport { TextInput } from '../components'\nimport '../css/Contactus.css'\n\n\n\nconst Contactus = () => {\n\n    const selector = useSelector(state => state)\n    const username = getUsername(selector)\n\n    const [reason, setReason] = useState(''),\n          [userUid, setUserUid] = useState(null)\n\n\n    const reasonField = useCallback((event) =>{\n        setReason(event.target.value)\n    },[setReason])\n\n    const userUidField = useCallback((event) =>{\n        setUserUid(event.target.value)\n    },[setUserUid])\n\n    const sendComplete = () =>{\n        setTimeout(() =>{\n            alert(`Your request has been sent completely!  We appreciate ${username}'s cooporation to improve our service! `)\n        },1000)\n    }\n\n    return (\n        <div className=\"contactusContainer\">\n             <p>Contact Us about Anything</p>\n             <small>We always strive to give you more high quality service. <br />\n                    Therefore, we would like you to <span style={{color:'red'}}>let us know</span> anything about the service!\n             </small>\n            <div className=\"contactusContainers\">\n             <small className=\"contactusSelect\">* SELECT</small>\n             <select defaultValue=\"Requests\">\n                <option value=\"Requests\">Requests</option>\n                <option value=\"Inapproriate Users\">Inapproriate Users</option>\n                <option value=\"Infringement of Service\">Infringement of Service</option>\n                <option value=\"Other Reasons\">Other Reasons</option>\n            </select>\n                 <TextInput fullWidth={true} required={false} multiline={false} label={'Report Inapproriate User Uid'}\n                 rows={1} value={userUid} type={'text'} onChange={userUidField}/>\n                 <TextInput fullWidth={true} required={false} multiline={true} label={'What happened?'}\n                  rows={10} value={reason} type={'text'} onChange={reasonField} />\n            <div\n              onClick={() => sendComplete()}\n              className=\"contactusButton\">\n                Send\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Contactus\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { getUsername, getUserInfoUID } from '../redux/users/selector'\nimport { useSelector } from 'react-redux'\nimport { TextInput } from '../components'\nimport '../css/Contactus.css'\n\n\n\nconst Contactus = () => {\n\n    const selector = useSelector(state => state)\n    const username = getUsername(selector)\n    const Uid = getUserInfoUID(selector)\n\n    const [reason, setReason] = useState(''),\n          [userUid, setUserUid] = useState(null)\n\n\n    const reasonField = useCallback((event) =>{\n        setReason(event.target.value)\n    },[setReason])\n\n    const userUidField = useCallback((event) =>{\n        setUserUid(event.target.value)\n    },[setUserUid])\n\n    const sendComplete = () =>{\n        setTimeout(() =>{\n            alert(`Your request has been sent completely!  We appreciate ${username}'s cooporation to improve our service! `)\n        },1000)\n    }\n\n    useEffect(() =>{\n        setUserUid(Uid)\n    },[Uid])\n\n    return (\n        <div className=\"contactusContainer\">\n             <p>Contact Us about Anything</p>\n             <small>We always strive to give you more high quality service. <br />\n                    Therefore, we would like you to <span style={{color:'red'}}>let us know</span> anything about the service!\n             </small>\n            <div className=\"contactusContainers\">\n             <small className=\"contactusSelect\">* SELECT</small>\n             <select defaultValue=\"Requests\">\n                <option value=\"Requests\">Requests</option>\n                <option value=\"Inapproriate Users\">Inapproriate Users</option>\n                <option value=\"Infringement of Service\">Infringement of Service</option>\n                <option value=\"Other Reasons\">Other Reasons</option>\n            </select>\n            { userUid === null ? null\n                 :\n                 <TextInput fullWidth={true} required={false} multiline={false} label={'Report Inapproriate User Uid'}\n                 rows={1} value={userUid} type={'text'} onChange={userUidField}/>}\n            <TextInput fullWidth={true} required={false} multiline={true} label={'What happened?'}\n                       rows={10} value={reason} type={'text'} onChange={reasonField} />\n            <div\n              onClick={() => sendComplete()}\n              className=\"contactusButton\">\n                Send\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Contactus\n","import React, { useState, useCallback } from 'react'\nimport '../css/SignUp.css'\nimport ImagePreview from '../components/ImagePreview'\nimport TextInput from '../components/TextInput'\nimport { signUp } from '../redux/users/operations'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { storage } from '../firebase'\n\n\n\nconst SignUp = () => {\n\n    const dispatch = useDispatch()\n    const [image, setImage] = useState(''),\n          [username, setUsername] = useState(''),\n          [age, setAge] = useState(''),\n          [languages, setLanguages] = useState([]),\n          [description, setDescription] = useState(''),\n          [email, setEmail] = useState(''),\n          [password, setPassword] = useState('')\n\n    const imagefield = useCallback((event) =>{\n        const file = event.target.files\n        let blob = new Blob(file, { type: 'image/jpeg'})\n        const String = \"abcdefghijklmnopkrstuvwxyz123456789\"\n        const Number = 16\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(Number))).map((n) =>\n          String[n % String.length]).join('')\n        const upload = storage.ref('images').child(fileName)\n        const uploadTask = upload.put(blob)\n\n        uploadTask.then(() =>{\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) =>{\n                const newImage = {id: fileName, path: downloadURL}\n                setImage((prevState => [...prevState, newImage]))\n            })\n        })\n    },[setImage])\n\n    const deleteImage = useCallback(async(id) =>{\n        const alarm = window.confirm('Do you want to delete this image?')\n        if(!alarm){\n            return false\n        }else{\n            const newImage = image.filter(i => i.id !== id)\n            setImage(newImage)\n            return storage.ref('images').child(id).delete()\n        }\n    },[image])\n\n    const usernamefield = useCallback((event) =>{\n        setUsername(event.target.value)\n    },[setUsername])\n\n    const agefield = useCallback((event) =>{\n        setAge(event.target.value)\n    },[setAge])\n\n    const languagesfield = useCallback((event) =>{\n        setLanguages(event.target.value)\n    },[setLanguages])\n\n    const descriptionfield = useCallback((event) =>{\n        setDescription(event.target.value)\n    },[setDescription])\n\n    const emailfield = useCallback((event) =>{\n        setEmail(event.target.value)\n    },[setEmail])\n\n    const passwordField = useCallback((event) =>{\n        setPassword(event.target.value)\n    },[setPassword])\n\n    return (\n        <div className=\"signUpContainer\">\n            <header>\n                <p>Write about yourself</p>\n            </header>\n            <div className=\"signUpSecondContainer\">\n                <div className=\"profileSetting\">\n                    {\n                        image.length > 0 && (\n                            image.map(i =>(\n                                <ImagePreview style={{height: 300, width: 300}}  path={i.path} i={i.id}\n                                               key={i.id} id={i.id}\n                              />\n                            ))\n                        )\n                    }\n                    <div className=\"profileSettingButton\">\n                       {\n                           image.length > 0 ? null :  <input type='file' id=\"image\"\n                                                       onChange={(event) => imagefield(event)}\n                                                       />\n                       }\n                    </div>\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={false} label={'Username'} required={true}\n                    rows={1} value={username} type={'text'} onChange={usernamefield}\n                    />\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={false} label={'Age'} required={true}\n                    rows={1} value={age} type={'number'} onChange={agefield}\n                    />\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={true} label={'Languages'} required={true}\n                    rows={1} value={languages} type={'text'} onChange={languagesfield}\n                    />\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={true} label={'Description'} required={true}\n                    rows={1} value={description} type={'text'} onChange={descriptionfield}\n                    />\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={false} label={'Email'} required={true}\n                    rows={1} value={email} type={'email'} onChange={emailfield}\n                    />\n                </div>\n                <div>\n                    <TextInput\n                    fullWidth={true} multiline={false} label={'Password'} required={true}\n                    rows={1} value={password} type={'password'} onChange={passwordField}\n                    />\n                </div>\n                <div\n                className=\"signUpButton\"\n                onClick={() => dispatch(signUp(image,username,age,languages,description,email,password))}>\n                    Sign Up\n                </div>\n                <div\n                className=\"backToLogin\"\n                onClick={() => dispatch(push('/login'))}>\n                    <p> <span>←　</span>Go back to Log In</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp\n","import React, { useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { SelectBox, TextInput } from '../components/index'\nimport { editProfile } from '../redux/users/operations'\nimport { getUsername, getUserLanguages, getUserDescription } from '../redux/users/selector'\nimport { AiOutlineZoomIn } from \"react-icons/ai\";\nimport '../css/ProfileEdit.css'\n\nconst ProfileEdit = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state)\n    const getusername = getUsername(selector)\n    const getuserlanguage =getUserLanguages(selector)\n    const getuserdescription = getUserDescription(selector)\n\n    const [username, setUsername] = useState(getusername),\n          [languages, setLanguages] = useState(getuserlanguage),\n          [description, setDescription] = useState(getuserdescription)\n\n    const usernamefield = useCallback((event) =>{\n        setUsername(event.target.value)\n    },[setUsername])\n\n    const languagesfield = useCallback((event) =>{\n        setLanguages(event.target.value)\n    },[setLanguages])\n\n    const descriptionfield = useCallback((event) =>{\n        setDescription(event.target.value)\n    },[setDescription])\n\n    /*const selectLanguages = [\n        {id: 'Germany', name: 'Germany'},\n        {id: 'Dutch', name: 'Dutch'},\n        {id: 'Italy', name: 'Italy'},\n        {id: 'Japanese', name: 'Japanese'},\n        {id: 'Russian', name: 'Russian'},\n        {id: 'Spanish', name: 'Spanish'},\n    ]*/\n\n\n    // 母語と学びたい言語で分ける？　学びたい言語を１つだけ設定 =>\n    // 男性ユーザーの多くが\"多くの女性と話したい\"という理由で学んでいない言語を複数に設定しているとの女性からの不満(アンケート)\n    // 女性ユーザーが学びたい言語を練習する機会の減少を防ぐため。\n    return (\n        <div className=\"profileEditContainer\">\n            <p className=\"updateTitle\">Update Your Profile</p>\n            <div className=\"profileEditSecondContainer\">\n            <div>\n                <TextInput\n                    fullWidth={true} multiline={false} label={'Username'} required={true}\n                    rows={1} value={username} type={'text'} onChange={usernamefield}\n                />\n            </div>\n            <div>\n                <TextInput\n                fullWidth={true} multiline={true} label={'Languages'} required={true}\n                rows={1} value={languages} type={'text'} onChange={languagesfield}\n                />\n            </div>\n            {/*<div>\n                <SelectBox label={'Languages'} required={true}\n                           value={languages} select={setLanguages} options={selectLanguages} />\n            </div>*/}\n            <div>\n                <TextInput\n                fullWidth={true} multiline={true} label={'Description'} required={true}\n                rows={1} value={description} type={'text'} onChange={descriptionfield}\n                />\n            </div>\n            <div\n            onClick={() => dispatch(editProfile(username, languages, description))}\n            className=\"contactusButton\">\n                Update\n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileEdit\n","import React, { useState, useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { TextInput, ImagePreview } from '../components'\nimport { storage } from '../firebase'\nimport { savePost } from '../redux/posts/operations'\nimport '../css/Post.css'\n\n\nconst Post = () => {\n    const dispatch = useDispatch()\n    const [image, setImage] = useState(''),\n          [description, setDescription] = useState('')\n\n\n    const desciprionfield = useCallback((event) =>{\n        setDescription(event.target.value)\n    },[setDescription])\n\n    const imagefield = useCallback((event) =>{\n        const file = event.target.files\n        let blob = new Blob(file, { type: 'image/jpeg'})\n        const String = \"abcdefghijklmnopkrstuvwxyz123456789\"\n        const Number = 16\n        const fileName = Array.from(crypto.getRandomValues(new Uint32Array(Number))).map((n) =>\n          String[n % String.length]).join('')\n        const upload = storage.ref('images').child(fileName)\n        const uploadTask = upload.put(blob)\n\n        uploadTask.then(() =>{\n            uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) =>{\n                const newImage = {id: fileName, path: downloadURL}\n                setImage((prevState => [...prevState, newImage]))\n            })\n        })\n    },[setImage])\n\n    return (\n        <div className=\"postContainer\">\n            <p className=\"postContainerTheme\">Let's Share your moment with everyone!</p>\n            <div className=\"postSecondContainer\">\n            {\n                image.length > 0 && (\n                    image.map(i =>(\n                        <img src={i.path} key={i.id} id={i.id} style={{height:200, width: 200,flex:0.1}} alt=\"post\" />\n                        /*<ImagePreview  path={i.path} i={i.id}\n                                       key={i.id} id={i.id}\n\n                        />*/\n                    ))\n                )\n            }\n            <div>\n                <input type='file' id=\"image\"\n                       onChange={(event) => imagefield(event)}\n                />\n            </div>\n            <div className=\"postDesc\">\n                <TextInput fullWidth={true} required={false} multiline={true} label={'What happened?'}\n                    rows={10} value={description} type={'text'} onChange={desciprionfield}\n                     />\n            </div>\n            <button onClick={() => dispatch(savePost(image, description))}>\n                Save Post\n            </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Post\n","import { getPostsAction, savePostAction } from './actions'\nimport { push } from 'connected-react-router'\nimport { v4 as uuid } from 'uuid'\nimport { db, FirebaseTimestamp } from \"../../firebase\";\nimport firebase from 'firebase/app'\n\n\nexport const getPosts = () => {\n    return async(dispatch, getState) =>{\n        try{\n            const { uid } = getState().users\n            console.log(uid)\n\n            if(uid){\n                db.collection('posts')\n                  .doc(uid)\n                  .get()\n                  .then(snapshots => {\n                      // How about pushing datas to array?\n                      const data = snapshots.data()\n                      dispatch(getPostsAction(data))\n                  })\n            }\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n\nexport const savePost = (image, description) =>{\n    return async(dispatch, getState) =>{\n        try{\n            const uid = getState().users.uid\n            const postArray = getState().posts.post\n            //const getImage = getState().posts.image\n            const timeStamp = FirebaseTimestamp.now()\n            //console.log(getDescription,getImage)\n\n           /* if(image === ''){\n                alert('You must choose a picture!')\n            }*/\n            console.log(postArray.length)\n\n            const id = uuid()\n            const postData = {\n                    updated_at: timeStamp,\n                    uid: id,\n                    image: image,\n                    description: description,\n                    created_at: timeStamp,\n            }\n\n            if(postArray.length === 0){\n                await db.collection('posts')\n                    .doc(uid)\n                    .set({\n                        post: firebase.firestore.FieldValue.arrayUnion(postData)\n                    })\n                    .then(() =>{\n                        dispatch(savePostAction(postData))\n                        dispatch(push('/profile/edit'))\n                    })\n\n                    console.log('Come')\n\n                await db.collection('users')\n                        .doc(uid)\n                        .update({\n                            posts: firebase.firestore.FieldValue.arrayUnion(id)\n                })\n            }else{\n                console.log('ARRAY')\n                await db.collection('posts')\n                    .doc(uid)\n                    .update({\n                        post: firebase.firestore.FieldValue.arrayUnion(postData)\n                    })\n                    .then(() =>{\n                        dispatch(savePostAction(postData))\n                        dispatch(push('/profile/edit'))\n                    })\n\n                    console.log('Come')\n\n                await db.collection('users')\n                        .doc(uid)\n                        .update({\n                            posts: firebase.firestore.FieldValue.arrayUnion(id)\n                })\n\n            }\n        }\n        catch(error){\n            throw new Error(error)\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserId, getUsername, getUserImages } from '../redux/users/selector'\nimport moment from 'moment'\nimport { db } from '../firebase'\nimport { getPosts } from '../redux/posts/operations'\nimport '../css/MyPosts.css'\n\n\nconst MyPosts = () => {\n    const selector = useSelector(state => state)\n    const dispatch = useDispatch()\n    const userId = getUserId(selector)\n    const username = getUsername(selector)\n    const userImage = getUserImages(selector)\n    const [photos, setPhotos] = useState('')\n\n\n    useEffect(() =>{\n\n          db.collection('posts')\n          .doc(userId)\n          .get()\n          .then(snapshot => {\n              console.log(snapshot)\n              const data = snapshot.data()\n              if(data === undefined){\n                  setPhotos(data)\n                  return false\n              }else{\n                    const post = data.post\n                    setPhotos(post)\n              }\n          })\n    },[userId])\n\n\n    if(!photos){\n        return(\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'}}>\n                <p>No Posts</p>\n            </div>\n        )\n    }\n    return (\n        <div className=\"myPosts\">\n            <p className=\"myPostsTheme\">My Posts</p>\n            <div className=\"myPostsContainer\">\n            {\n                photos ?\n                    photos.map(photo => (\n                        <div className=\"myPostsOutline\"\n                        　　　key={photo.id}\n                             id={photo.id}>\n                                <div className=\"myPostsHeader\">\n                                  <img src={userImage[0].path} style={{width: 50, height: 50, borderRadius:'50%'}} alt=\"Profile\" />\n                                  <p>{username}</p>\n                                </div>\n                                <div className=\"myPostsImageContainer\">\n                                    <img src={photo.image[0].path} className=\"myPostsImage\" alt=\"Posts\" />\n                                    {/* 投稿した日付をどうにかInvalid Dataから変えること！ */}\n                                    <p>{moment(photo.created_at).format(\"YYYY/MM/DD(ddd)\")}</p>\n                                </div>\n                                <div>\n                                  <p>{photo.description}</p>\n                                </div>\n                            { !userId && (\n                                <div style={{background:'blue'}}>\n                                Save\n                                </div>\n                            )}\n                        </div>\n                    ))\n                    :\n                    <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh'}}>\n                        <p>No Photos</p>\n                    </div>\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserId, getAllUsers, getUserLanguages, getUserIsSigned } from '../redux/users/selector'\nimport { getOtherFriends } from '../redux/users/operations'\nimport { UserProfile, UserLists } from '../components'\nimport '../css/SearchFriends.css'\n\n\nconst SearchFriends = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state)\n    const allUsers = getAllUsers(selector)\n    const languages = getUserLanguages(selector)\n    const isOnline = getUserIsSigned(selector)\n    const userId = getUserId(selector)\n\n    const[users, setUsers] = useState('')\n\n   /* useEffect(() => {\n         async function fetchData(){\n          await dispatch(getOtherFriends(5))\n            setUsers(allUsers)\n            console.log(allUsers)\n         }\n        fetchData()\n    },[dispatch])*/\n\n    useEffect(() =>{\n        dispatch(getOtherFriends(10))\n        .then(() =>{\n            if(allUsers !== undefined){\n                setUsers(allUsers)\n                console.log(allUsers)\n            }else{\n                console.log('ERROR OCCURED')\n            }\n        })\n    },[allUsers, userId])\n\n    return (\n        <>\n        <div className=\"searchFriendsTheme\">\n            Find Friends!\n        </div>\n        <div className=\"searchFriendscontainer\">\n            <div>\n                { users && (\n                    users.map((u,index) => (\n                        userId === u.uid ? null :\n                        <div>\n                            <UserLists\n                            key={u.index}\n                            id={u.index}\n                            uid={u.uid}\n                            age={u.age}\n                            isOnline={u.isOnline}\n                            username={u.username}\n                            languages={u.languages}\n                            image={u.profileImage}\n                            description={u.description}\n                            // image={u.profileImage[0].path}\n                            />\n                        </div>\n                    ))\n                )}\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default SearchFriends\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport { getAllUsers, followUser } from '../redux/Chats/operations'\nimport { getUserId, getUserFollowers } from '../redux/users/selector'\nimport { getUserProfile, getFollowedUser} from '../redux/users/operations'\nimport { getUserInfo, getNoUserStatement } from '../redux/Chats/selector'\nimport  TextInput from '../components/TextInput'\nimport '../css/Friends.css'\n\nconst Friends = () => {\n    const [users, setUsers] = useState([]),\n          [followed, setFollowed] = useState([]),\n          [chat, setChat] = useState(''),\n          [open, setOpen] = useState(false)\n\n    const selector = useSelector(state => state)\n    const dispatch = useDispatch()\n    const userUid = getUserId(selector)\n    const infomation = getUserInfo(selector)\n    const noUsers = getNoUserStatement(selector)\n    const followers = getUserFollowers(selector)\n\n    const chatField = useCallback((event) =>{\n        setChat(event.target.value)\n    },[setChat])\n\n   useEffect(() =>{\n            dispatch(getAllUsers())\n            dispatch(getFollowedUser())\n            .then(() =>{\n                if(infomation !== undefined){\n                    setUsers(infomation)\n                    setFollowed(followers)\n                    console.log(users)\n                    console.log(followers)\n                }else{\n                    setUsers(noUsers)\n                }\n            })\n    },[dispatch, infomation])\n\n\n\n    return (\n        <>\n        <div className=\"friendsChatContainer\">\n            <div className=\"friendsChatLists\">\n                <div className=\"friendsChatHeader\">\n                   Your Chat Lists\n                </div>\n                { users.length > 0 ? users.map((user,index) =>(\n                    <>\n                    <div\n                        key={user.index}\n                        id={user.index}\n                        onClick={() =>{\n                            dispatch(push(`/friends/chat/${user.uid}}`))\n                            dispatch(getUserProfile(user.uid,user.username,user.description,user.image,user.age,user.isOnline,user.languages))\n                            dispatch(followUser(user.uid))\n                            //dispatch(startConveration(user.uid))\n                        }}\n                        >\n                            <div className=\"friendsChatInfo\">\n                              { user.image ? <img src={user.image[0].path} style={{width:100,height:100,borderRadius:'50%'}} alt=\"UserProfileImage\" />\n                                           : 'Hello'}\n                              <p>{user.username}</p>\n                              <p>{user.age}</p>\n                              <p>{user.languages}</p>\n                              <p>{user.description !== '' ? '' : ''}</p>\n                              <p>{user.isOnline === true ? 'Online' : 'Offline'}</p>\n                              {/* Insert Image*/}\n                            </div>\n                        </div>\n                    </>\n                )) : <div>No Chats Available</div>}\n            </div>\n           {/* { open === true ?\n                <div className=\"friendsChats\">\n                    <div className=\"friendsChatsInput\">\n                    <TextInput fullWidth={true} multiline={true} value={chat} type={'text'}\n                                onChange={chatField} />\n                    <div className=\"friendsChatsButton\">Send</div>\n                </div>\n           </div> : null }*/}\n        </div>\n        </>\n    )\n}\n\nexport default Friends\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport './newsCss/NewsHome.css'\nimport { AiFillCaretDown } from \"react-icons/ai\";\n\n\n\nconst NewsHome = () => {\n\n    const dispatch = useDispatch()\n\n    /*const [data, setData] = useState([]),\n          [searchQuery, setSearchQuery] = useState(''),\n          [iconFilter, setIconFilter] = useState('filter'),\n          [showFilter, setFilter] = useState(true),\n          [isLoading, setIsLoading] = useState(true),\n          [rel, setRel] = useState(false),\n          [pop, setPop] = useState(false),\n          [pub, setPub] = useState(false),\n          [color, setColor] = useState('blue'),\n          //[fromDate, setFromData] = useState((new Date).toISOString().substring),\n          //[toDate, setDate] = useState((new Date).toISOString().substring(0,10),),\n          [itemFetched, setItemFetched] = useState(20),\n          [totalResults, setTotalResults] = useState(0),\n          [datas, setDatas] = useState(null),\n          [modalVisible, setModalVisible] = useState(false)\n\n\n     const getData = () => {\n            let sortBy = 'publishedAt';\n            let itemsFetched = setItemFetched;\n            //if (setRel === true) { sortBy = 'relevancy'\n            //} else if (setPop === true) { sortBy = 'popularity'\n            //}\n            setIsLoading(true)\n            let q = encodeURIComponent(setSearchQuery.toLowerCase());\n            let uri = `https://newsapi.org/v2/everything?q=${q}&language=en&sortBy=${sortBy}&pageSize=${itemsFetched}&from=${this.state.fromDate}&to=${this.state.toDate}&apiKey=8953a82cf3d447318585bfb3ef6f6944`\n\n            fetch(uri)\n                .then((response) => response.json())\n                .then((responseJson) => {\n                    setData(responseJson.articles)\n                    setTotalResults(responseJson.totalResults)\n                })\n                .catch((error) => {\n                    console.error(error);\n                })\n                .finally(() => {\n                    setIsLoading(false)\n                })\n        }*/\n\n    return(\n        <>\n        <div className=\"container\">\n            <div className=\"position\">\n                <div className=\"theme\">\n                   <p className=\"news\">Read News and Know What's Happening in the World!</p>\n                   <p className=\"select\">Choose a Language below</p>\n                   <AiFillCaretDown className=\"AiFillCaretDown\"/>\n                </div>\n                <div>\n                    <ul className=\"itemsContainer\">\n                        <div className=\"items\">\n                          <li onClick={() => dispatch(push('/news/japanese'))}><span>🇯🇵 </span>Japanese</li>\n                          <li onClick={() => dispatch(push('/news/korean'))}><span>🇰🇷 </span>Korean</li>\n                        </div>\n                        <div className=\"items\">\n                          <li onClick={() => dispatch(push('/news/chinese'))}><span>🇨🇳 </span> Chinese</li>\n                          <li onClick={() => dispatch(push('/news/english'))}><span>🇺🇸🇬🇧 </span>English</li>\n                        </div>\n                        <div className=\"items\">\n                          <li onClick={() => dispatch(push('/news/russian'))}><span>🇷🇺 </span>Russian</li>\n                          <li onClick={() => dispatch(push('/news/french'))}><span>🇫🇷 </span>French</li>\n                        </div>\n                    </ul>\n                </div>\n                <div onClick={() => dispatch(push('/news_search'))}>\n                    Search\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default NewsHome\n","// 検索結果上位のニュース表示\nexport const articles_url = 'http://newsapi.org/v2/top-headlines'\n\n// 国のコード(何カ国分のコードが必要になるか？必要に応じて取得することが出来るようにする。)\nexport const country_code = 'jp'\nexport const country_codeTwo = 'kr'\nexport const country_codeThree = 'cn'\nexport const country_codeFour = 'en'\nexport const country_codeFifth = 'ru'\nexport const country_codeSixth = 'fr'\n\n// キーワード(K-popやAsia等の特定の言葉を抽出してニュースを取得することが出来る。)\nexport const quota = 'Barcelona'\n\n// 言語\nexport const languageTwo = 'kr'\nexport const languageThree = 'cn'\nexport const languageFour = 'en'\nexport const languageFive = 'es'\nexport const languageSix = 'ru'\n\n// MY PASSWORDS\nexport const _api_key = '8953a82cf3d447318585bfb3ef6f6944'\n","import { articles_url,country_code,_api_key } from './config'\n\n// Newsのキーワードを取ってくる。\n\nexport  async function getArticles(){\n\n    try {\n        let articles = await fetch(`${articles_url}?country=${country_code}`, {\n\n            //上記のコードに下のPERSONAL PASSWORDを追加。\n            headers: {\n                'X-API-KEY': _api_key\n            }\n\n            // Content-Type ヘッダーはクライアントに返されたコンテンツが\n            // 実際にはどのような種類のものであるかを伝える\n        });\n\n        // Jsonでデータを返す。\n        let result = await articles.json();\n        articles = null;\n\n        return result.articles;\n    }\n    catch(error) {\n        throw error;\n    }\n}","import React from 'react'\nimport './newsCss/SelectedItem.css'\n\n\nconst DataItem = (props) => {\n\n    const { data, clicked, goToNews, url } = props\n\n    const shortText = (text, maxLength = 60) =>{\n        if(!text) {return(' ')}\n        if(text.length <= maxLength) {return text}\n        return text.substr(0,maxLength) + '....'\n    }\n\n    if(!clicked){\n        return(\n            <>\n            <div className=\"newsStyle\">\n                <div className=\"newsPosition\">\n                  <img src={data.urlToImage} alt=\"news\" style={{width:200, objectFit:'cover'}}/>\n                  <div className=\"newsTitle\">\n                    <p className=\"newsTheme\">{data.title}</p>\n                    <p className=\"newsDescription\">{shortText(data.description)}</p>\n                    <a\n                    href={url}\n                    onClick={() => goToNews()}\n                    className=\"goToNews\">Go To News</a>\n                  </div>\n                  {/*サイトから戻るをクリックした時に最初のホームページに必ず戻ってきてしまうことが問題点\n                  　　モダルに変更するのが吉？　\n                  　*/}\n                </div>\n            </div>\n            </>\n        )\n    }else{\n        return null\n    }\n}\n\nexport default DataItem\n","import React, { useState, useEffect } from 'react'\nimport { getArticles } from '../service/news'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport DataItem from './DataItem'\nimport './newsCss/SelectedItem.css'\nimport { AiOutlineRedo } from \"react-icons/ai\";\n\n\n\nconst Japanese = () => {\n\n    const dispatch = useDispatch()\n    const [isLoading, setIsLoading] = useState(true),\n          [data, setData] = useState(null),\n          [clicked, setClicked] = useState(false),\n          [image, setImage] = useState(''),\n          [title, setTitle] = useState(''),\n          [toUrl, setToUrl] = useState(''),\n          [description, setdescription] = useState('')\n\n\n    const goToNews = () =>{\n        //dispatch(push(`/news/${url}`))\n        setClicked(true)\n       /* setToUrl(url)\n        setImage(i)\n        setTitle(t)\n        setdescription(d)\n        console.log('Successed')\n        console.log(i)*/\n    }\n\n    useEffect(() =>{\n       const unsubscribe = getArticles()\n        .then(datas =>{\n            setIsLoading(false)\n            setData(datas)\n            console.log(datas)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n        return unsubscribe\n    },[])\n\n\n    return (\n        <div>\n            <div className=\"themeHeader\">\n               <p>🇯🇵 Japanese</p>\n               <div className=\"gotoOtherLanguages\">\n                 <ul>\n                        <li onClick={() => dispatch(push('/news/korean'))}><span>🇰🇷 </span>Korean</li>\n                        <li onClick={() => dispatch(push('/news/chinese'))}><span>🇨🇳 </span> Chinese</li>\n                        <li onClick={() => dispatch(push('/news/english'))}><span>🇺🇸🇬🇧 </span>English</li>\n                        <li onClick={() => dispatch(push('/news/russian'))}><span>🇷🇺 </span>Russian</li>\n                        <li onClick={() => dispatch(push('/news/french'))}><span>🇫🇷 </span>French</li>\n                 </ul>\n               </div>\n            </div>\n            {\n                data ?\n                data.map(data => (\n                    <>\n                    { !clicked && (\n                        <div className=\"newsContainer\">\n                          <DataItem key={data.id} id={data.id} data={data}\n                                    clicked={clicked} goToNews={goToNews} url={data.url}/>\n                        </div>\n                    )\n                    }\n                    </>\n                ))\n                :\n                <>\n                  <div className=\"fetchingDatas\">\n                       <p>Wait for a moment,please...</p><AiOutlineRedo className=\"AiOutlineRedo\" />\n                   </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Japanese\n","import { articles_url, country_codeTwo ,_api_key} from './config'\n\n// Newsのキーワードを取ってくる。\n\nexport  async function getArticles(){\n\n    try {\n        let articles = await fetch(`${articles_url}?country=${country_codeTwo}`, {\n\n            //上記のコードに下のPERSONAL PASSWORDを追加。\n            headers: {\n                'X-API-KEY': _api_key\n            }\n\n            // Content-Type ヘッダーはクライアントに返されたコンテンツが\n            // 実際にはどのような種類のものであるかを伝えます\n        });\n\n        // Jsonでデータを返す。\n        let result = await articles.json();\n        articles = null;\n\n        return result.articles;\n    }\n    catch(error) {\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { getArticles } from '../service/news2'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport DataItem from './DataItem'\nimport './newsCss/SelectedItem.css'\nimport { AiOutlineRedo } from \"react-icons/ai\";\n\nconst Korean = () => {\n\n    const dispatch = useDispatch()\n    const [isLoading, setIsLoading] = useState(true),\n          [data, setData] = useState(null),\n          [clicked, setClicked] = useState(false),\n          [image, setImage] = useState(''),\n          [title, setTitle] = useState(''),\n          [toUrl, setToUrl] = useState(''),\n          [description, setdescription] = useState('')\n\n\n    const goToNews = () =>{\n        //dispatch(push(`/news/${url}`))\n        setClicked(true)\n       /* setToUrl(url)\n        setImage(i)\n        setTitle(t)\n        setdescription(d)\n        console.log('Successed')\n        console.log(i)*/\n    }\n\n    useEffect(() =>{\n       const unsubscribe = getArticles()\n        .then(datas =>{\n            setIsLoading(false)\n            setData(datas)\n            console.log(datas)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n        return unsubscribe\n    },[])\n\n\n    return (\n        <div>\n            <div className=\"themeHeader\">\n               <p>🇰🇷  Korean</p>\n               <div className=\"gotoOtherLanguages\">\n                 <ul>\n                        <li onClick={() => dispatch(push('/news/japanese'))}><span>🇯🇵 </span>Japanese</li>\n                        <li onClick={() => dispatch(push('/news/chinese'))}><span>🇨🇳 </span> Chinese</li>\n                        <li onClick={() => dispatch(push('/news/english'))}><span>🇺🇸🇬🇧 </span>English</li>\n                        <li onClick={() => dispatch(push('/news/russian'))}><span>🇷🇺 </span>Russian</li>\n                        <li onClick={() => dispatch(push('/news/french'))}><span>🇫🇷 </span>French</li>\n                 </ul>\n               </div>\n            </div>\n            {\n                data ?\n                data.map(data => (\n                    <>\n                    { !clicked && (\n                        <div className=\"newsContainer\">\n                          <DataItem key={data.id} id={data.id} data={data}\n                                    clicked={clicked} goToNews={goToNews} url={data.url}/>\n                        </div>\n                    )\n                    }\n                    </>\n                ))\n                :\n                <>\n                  <div className=\"fetchingDatas\">\n                    <p>Wait for a moment,please...</p><AiOutlineRedo className=\"AiOutlineRedo\" />\n                  </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Korean\n","import { articles_url, country_codeThree, _api_key } from './config'\n\n// Newsのキーワードを取ってくる。\n\nexport  async function getArticles(){\n\n    try {\n        let articles = await fetch(`${articles_url}?country=${country_codeThree}`, {\n\n            //上記のコードに下のPERSONAL PASSWORDを追加。\n            headers: {\n                'X-API-KEY': _api_key\n            }\n\n            // Content-Type ヘッダーはクライアントに返されたコンテンツが\n            // 実際にはどのような種類のものであるかを伝えます\n        });\n\n        // Jsonでデータを返す。\n        let result = await articles.json();\n        articles = null;\n\n        return result.articles;\n    }\n    catch(error) {\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { getArticles } from '../service/news3'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport DataItem from './DataItem'\nimport './newsCss/SelectedItem.css'\nimport { AiOutlineRedo } from \"react-icons/ai\";\n\nconst Chinese = () => {\n\n    const dispatch = useDispatch()\n    const [isLoading, setIsLoading] = useState(true),\n          [data, setData] = useState(null),\n          [clicked, setClicked] = useState(false),\n          [image, setImage] = useState(''),\n          [title, setTitle] = useState(''),\n          [toUrl, setToUrl] = useState(''),\n          [description, setdescription] = useState('')\n\n\n    const goToNews = () =>{\n        //dispatch(push(`/news/${url}`))\n        setClicked(true)\n       /* setToUrl(url)\n        setImage(i)\n        setTitle(t)\n        setdescription(d)\n        console.log('Successed')\n        console.log(i)*/\n    }\n\n    useEffect(() =>{\n       const unsubscribe = getArticles()\n        .then(datas =>{\n            setIsLoading(false)\n            setData(datas)\n            console.log(datas)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n        return unsubscribe\n    },[])\n\n\n    return (\n        <div>\n            <div className=\"themeHeader\">\n               <p>🇨🇳  Chinese</p>\n               <div className=\"gotoOtherLanguages\">\n                 <ul>\n                        <li onClick={() => dispatch(push('/news/japanese'))}><span>🇯🇵 </span>Japanese</li>\n                        <li onClick={() => dispatch(push('/news/korean'))}><span>🇰🇷 </span>Korean</li>\n                        <li onClick={() => dispatch(push('/news/english'))}><span>🇺🇸🇬🇧 </span>English</li>\n                        <li onClick={() => dispatch(push('/news/russian'))}><span>🇷🇺 </span>Russian</li>\n                        <li onClick={() => dispatch(push('/news/french'))}><span>🇫🇷 </span>French</li>\n                 </ul>\n               </div>\n            </div>\n            {\n                data ?\n                data.map(data => (\n                    <>\n                    { !clicked && (\n                        <div className=\"newsContainer\">\n                          <DataItem key={data.id} id={data.id} data={data}\n                                    clicked={clicked} goToNews={goToNews} url={data.url}/>\n                        </div>\n                    )\n                    }\n                    </>\n                ))\n                :\n                <>\n                  <div className=\"fetchingDatas\">\n                    <p>Wait for a moment,please...</p><AiOutlineRedo className=\"AiOutlineRedo\" />\n                  </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Chinese\n","import { articles_url,languageFour,_api_key } from './config'\n\nexport  async function getArticles(){\n\n    try {\n        let articles = await fetch(`${articles_url}?language=${languageFour}`, {\n            headers: {\n                'X-API-KEY': _api_key\n            }\n        });\n\n        let result = await articles.json();\n        articles = null;\n\n        return result.articles;\n    }\n    catch(error) {\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { getArticles } from '../service/news4'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport DataItem from './DataItem'\nimport './newsCss/SelectedItem.css'\nimport { AiOutlineRedo } from \"react-icons/ai\";\n\nconst English = () => {\n\n    const dispatch = useDispatch()\n    const [isLoading, setIsLoading] = useState(true),\n          [data, setData] = useState(null),\n          [clicked, setClicked] = useState(false),\n          [image, setImage] = useState(''),\n          [title, setTitle] = useState(''),\n          [toUrl, setToUrl] = useState(''),\n          [description, setdescription] = useState('')\n\n\n    const goToNews = () =>{\n        //dispatch(push(`/news/${url}`))\n        setClicked(true)\n       /* setToUrl(url)\n        setImage(i)\n        setTitle(t)\n        setdescription(d)\n        console.log('Successed')\n        console.log(i)*/\n    }\n\n    useEffect(() =>{\n       const unsubscribe = getArticles()\n        .then(datas =>{\n            setIsLoading(false)\n            setData(datas)\n            console.log(datas)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n        return unsubscribe\n    },[])\n\n\n    return (\n        <div>\n            <div className=\"themeHeader\">\n               <p>🇺🇸🇬🇧 English</p>\n               <div className=\"gotoOtherLanguages\">\n                 <ul>\n                        <li onClick={() => dispatch(push('/news/japanese'))}><span>🇯🇵 </span>Japanese</li>\n                        <li onClick={() => dispatch(push('/news/korean'))}><span>🇰🇷 </span>Korean</li>\n                        <li onClick={() => dispatch(push('/news/chinese'))}><span>🇨🇳 </span> Chinese</li>\n                        <li onClick={() => dispatch(push('/news/russian'))}><span>🇷🇺 </span>Russian</li>\n                        <li onClick={() => dispatch(push('/news/french'))}><span>🇫🇷 </span>French</li>\n                 </ul>\n               </div>\n            </div>\n            {\n                data ?\n                data.map(data => (\n                    <>\n                    { !clicked && (\n                        <div className=\"newsContainer\">\n                          <DataItem key={data.id} id={data.id} data={data}\n                                    clicked={clicked} goToNews={goToNews} url={data.url}/>\n                        </div>\n                    )\n                    }\n                    </>\n                ))\n                :\n                <>\n                  <div className=\"fetchingDatas\">\n                    <p>Wait for a moment,please...</p><AiOutlineRedo className=\"AiOutlineRedo\" />\n                  </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default English\n","import { articles_url, _api_key, country_codeFifth } from './config'\n\nexport  async function getArticles(){\n\n    try {\n        let articles = await fetch(`${articles_url}?country=${country_codeFifth}`, {\n            headers: {\n                'X-API-KEY': _api_key\n            }\n        });\n\n        let result = await articles.json();\n        articles = null;\n\n        return result.articles;\n    }\n    catch(error) {\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { getArticles } from '../service/news5'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport DataItem from './DataItem'\nimport './newsCss/SelectedItem.css'\nimport { AiOutlineRedo } from \"react-icons/ai\";\n\nconst Russian = () => {\n\n    const dispatch = useDispatch()\n    const [isLoading, setIsLoading] = useState(true),\n          [data, setData] = useState(null),\n          [clicked, setClicked] = useState(false),\n          [image, setImage] = useState(''),\n          [title, setTitle] = useState(''),\n          [toUrl, setToUrl] = useState(''),\n          [description, setdescription] = useState('')\n\n\n    const goToNews = () =>{\n        //dispatch(push(`/news/${url}`))\n        setClicked(true)\n       /* setToUrl(url)\n        setImage(i)\n        setTitle(t)\n        setdescription(d)\n        console.log('Successed')\n        console.log(i)*/\n    }\n\n    useEffect(() =>{\n       const unsubscribe = getArticles()\n        .then(datas =>{\n            setIsLoading(false)\n            setData(datas)\n            console.log(datas)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n        return unsubscribe\n    },[])\n\n\n    return (\n        <div>\n            <div className=\"themeHeader\">\n               <p>🇷🇺 Russian</p>\n               <div className=\"gotoOtherLanguages\">\n                 <ul>\n                        <li onClick={() => dispatch(push('/news/japanese'))}><span>🇯🇵 </span>Japanese</li>\n                        <li onClick={() => dispatch(push('/news/korean'))}><span>🇰🇷 </span>Korean</li>\n                        <li onClick={() => dispatch(push('/news/chinese'))}><span>🇨🇳 </span> Chinese</li>\n                        <li onClick={() => dispatch(push('/news/english'))}><span>🇺🇸🇬🇧 </span>English</li>\n                        <li onClick={() => dispatch(push('/news/french'))}><span>🇫🇷 </span>French</li>\n                 </ul>\n               </div>\n            </div>\n            {\n                data ?\n                data.map(data => (\n                    <>\n                    { !clicked && (\n                        <div className=\"newsContainer\">\n                          <DataItem key={data.id} id={data.id} data={data}\n                                    clicked={clicked} goToNews={goToNews} url={data.url}/>\n                        </div>\n                    )\n                    }\n                    </>\n                ))\n                :\n                <>\n                  <div className=\"fetchingDatas\">\n                    <p>Wait for a moment,please...</p><AiOutlineRedo className=\"AiOutlineRedo\" />\n                  </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default Russian\n","import { articles_url, country_codeSixth, _api_key} from './config'\n\nexport  async function getArticles(){\n\n    try {\n        let articles = await fetch(`${articles_url}?country=${country_codeSixth}`, {\n            headers: {\n                'X-API-KEY': _api_key\n            }\n        });\n\n        let result = await articles.json();\n        articles = null;\n\n        return result.articles;\n    }\n    catch(error) {\n        throw error;\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { getArticles } from '../service/news6'\nimport { useDispatch } from 'react-redux'\nimport { push } from 'connected-react-router'\nimport DataItem from './DataItem'\nimport './newsCss/SelectedItem.css'\nimport { AiOutlineRedo } from \"react-icons/ai\";\n\nconst French = () => {\n\n    const dispatch = useDispatch()\n    const [isLoading, setIsLoading] = useState(true),\n          [data, setData] = useState(null),\n          [clicked, setClicked] = useState(false),\n          [image, setImage] = useState(''),\n          [title, setTitle] = useState(''),\n          [toUrl, setToUrl] = useState(''),\n          [description, setdescription] = useState('')\n\n\n    const goToNews = () =>{\n        //dispatch(push(`/news/${url}`))\n        setClicked(true)\n       /* setToUrl(url)\n        setImage(i)\n        setTitle(t)\n        setdescription(d)\n        console.log('Successed')\n        console.log(i)*/\n    }\n\n    useEffect(() =>{\n       const unsubscribe = getArticles()\n        .then(datas =>{\n            setIsLoading(false)\n            setData(datas)\n            console.log(datas)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n\n        return unsubscribe\n    },[])\n\n\n    return (\n        <div>\n            <div className=\"themeHeader\">\n               <p>🇫🇷 French</p>\n               <div className=\"gotoOtherLanguages\">\n                 <ul>\n                        <li onClick={() => dispatch(push('/news/japanese'))}><span>🇯🇵 </span>Japanese</li>\n                        <li onClick={() => dispatch(push('/news/korean'))}><span>🇰🇷 </span>Korean</li>\n                        <li onClick={() => dispatch(push('/news/chinese'))}><span>🇨🇳 </span> Chinese</li>\n                        <li onClick={() => dispatch(push('/news/english'))}><span>🇺🇸🇬🇧 </span>English</li>\n                        <li onClick={() => dispatch(push('/news/russian'))}><span>🇷🇺 </span>Russian</li>\n                 </ul>\n               </div>\n            </div>\n            {\n                data ?\n                data.map(data => (\n                    <>\n                    { !clicked && (\n                        <div className=\"newsContainer\">\n                          <DataItem key={data.id} id={data.id} data={data}\n                                    clicked={clicked} goToNews={goToNews} url={data.url}/>\n                        </div>\n                    )\n                    }\n                    </>\n                ))\n                :\n                <>\n                  <div className=\"fetchingDatas\">\n                    <p>Wait for a moment,please...</p><AiOutlineRedo className=\"AiOutlineRedo\" />\n                  </div>\n                </>\n            }\n        </div>\n    )\n}\n\nexport default French\n","import React, { useEffect } from 'react'\n\nconst News = (props) => {\n\n\n    console.log(props)\n\n    const { image, title, description } = props\n\n\n    return (\n        <div></div>\n      /*  <div>\n           <p>{title}</p>\n           <img src={image} style={{width: 100, height: 100}}  />\n           <p>{description}</p>\n        </div>*/\n    )\n}\n\nexport default News\n","import React, { useState, useCallback } from 'react'\n\nconst Search = () => {\n\n    const [search, setSearch] = useState(''),\n          [data, setData] = useState([])\n\n    const searchField = (event) =>{\n        setSearch(event.target.value)\n        console.log(search)\n    }\n    return (\n        <div>\n            <input\n            placeholder=\"Search\"\n            value={search}\n            onChange={searchField} />\n            <button onClick={(e) => searchField(e)}>Send</button>\n        </div>\n    )\n}\n\nexport default Search\n","import React, { useEffect } from 'react'\nimport { useDispatch ,useSelector } from 'react-redux'\nimport { getUserSignedIn } from './redux/users/selector'\nimport { authState } from './redux/users/operations'\nimport '../src/css/Auth.css'\n\nconst Auth = ({children}) => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state)\n    const signedIn = getUserSignedIn(selector)\n\n    // If the user has not logged in yet, this useEffect runs\n    useEffect(() =>{\n        if(!signedIn){\n            setTimeout(() =>{\n                dispatch(authState())\n            },2000)\n        }\n    })\n\n    if(!signedIn){\n        return <>\n                 <div className=\"loading\">\n                     <p>Loading.....</p>\n                 </div>\n               </>\n    }else{\n        return children\n    }\n}\n\nexport default Auth\n","import React from 'react'\nimport { Switch, Route } from 'react-router'\nimport { Login, SignUp, Home, ProfileEdit, Post, MyProfile, Shop, Policy,\n         MyPosts, SearchFriends, Friends, Contactus, ContactusUid } from '../pages'\nimport { Chat, Header, UserProfile, UserProfileChat } from '../components'\nimport { News, Japanse, Korean, Chinese, English, Russian, French, NewsTheme, Search } from '../news'\nimport Auth from '../Auth'\n\n\nconst Router = () => {\n    return (\n       <Switch>\n           {/* Sign Upしていない場合に表示されるComponents */}\n           <Route exact path={'/signup'} component={SignUp} />\n           <Route exact path={'/login'} component={Login} />\n\n           {/* 既にLog Inをしている場合にのみ表示されるComponents */}\n           <Auth>\n                <Header />\n                <Route exact path={'(/)?'} component={Home} />\n                <Route exact path={'/shop'} component={Shop}/>\n                <Route exact path={'/policy'} component={Policy}/>\n                <Route exact path={'/home/contactus'} component={Contactus} />\n                <Route exact path={'/search'} component={SearchFriends}/>\n                <Route path={'/search/:id'} component={UserProfile}/>\n                <Route path={'/userProfile/:id'} component={UserProfileChat}/>\n                <Route path={'/friends/chat/:id'} component={Chat}/>\n                <Route path={'/contactus/:id'} component={ContactusUid}/>\n                <Route path={'/friendsCandidate'} component={Friends}/>\n                <Route exact path={'/profile'} component={MyProfile}/>\n                <Route exact path={'/profile/posts'} component={MyPosts} />\n                <Route exact path={'/profile/edit'} component={ProfileEdit} />\n                <Route exact path={'/profile/edit/post'} component={Post}/>\n                <Route exact path={'/news'} component={News}/>\n                <Route path={'/news/japanese'} component={Japanse}/>\n                <Route path={'/news/korean'} component={Korean}/>\n                <Route path={'/news/chinese'} component={Chinese}/>\n                <Route path={'/news/english'} component={English}/>\n                <Route path={'/news/russian'} component={Russian}/>\n                <Route path={'/news/french'} component={French}/>\n                <Route path={'/news/:id'} component={NewsTheme}/>\n                <Route exact path={'/news_search'} component={Search}/>\n           </Auth>\n       </Switch>\n    )\n}\n\nexport default Router\n","import React from 'react'\nimport './App.css';\nimport { useSelector } from 'react-redux'\nimport Router from './router/Router';\n\n\nfunction App() {\n  const selector = useSelector((state) => state)\n  console.log(selector)\n\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n    createStore as reduxCreateStore,\n    combineReducers,\n    applyMiddleware\n} from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport { UsersReducer } from '../users/reducers'\nimport { PostsReducers } from '../posts/reducers'\nimport { ChatsReducers } from '../Chats/reducers'\n\nexport default function createStore(history){\n    return reduxCreateStore(\n        combineReducers({\n            router: connectRouter(history),\n            users: UsersReducer,\n            posts: PostsReducers,\n            chats: ChatsReducers\n        }),\n        applyMiddleware(\n            // コメント必要後で\n          routerMiddleware(history),\n          // 非同期処理をreduxで可能にするのに必要\n          thunk\n        )\n    )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport createStore from './redux/store/store'\nimport * as History from 'history';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst history = History.createBrowserHistory()\nexport const store = createStore(history)\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}